-- ‚úÖ NgƒÉn ch·∫°y nhi·ªÅu l·∫ßn
if _G.ScriptAlreadyRunning then return end
_G.ScriptAlreadyRunning = true

-- ‚úÖ C·∫•u h√¨nh
local VALID_PLACE_ID = 126884695634066
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local LocalPlayer = Players.LocalPlayer

-- ‚úÖ Ghi l·∫°i JobId hi·ªán t·∫°i n·∫øu ch∆∞a c√≥ (d√πng ƒë·ªÉ ki·ªÉm tra rejoin)
_G.LastJobId = _G.LastJobId or game.JobId
local currentJobId = game.JobId

-- ‚úÖ H√†m t√¨m server public ph√π h·ª£p (<= 5 ng∆∞·ªùi)
local function findPublicServer()
    local cursor = ""
    local url = ("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Asc&limit=100"):format(VALID_PLACE_ID)

    while true do
        local fullUrl = url .. (cursor ~= "" and "&cursor=" .. cursor or "")
        local success, result = pcall(function()
            return HttpService:JSONDecode(game:HttpGet(fullUrl))
        end)

        if success and result and result.data then
            for _, server in ipairs(result.data) do
                if server.playing <= 5 and server.id ~= game.JobId then
                    return server.id
                end
            end
            if result.nextPageCursor then
                cursor = result.nextPageCursor
            else
                break
            end
        else
            break
        end
    end
    return nil
end

-- ‚úÖ H√†m ki·ªÉm tra n·∫øu server hi·ªán t·∫°i kh√¥ng h·ª£p l·ªá
local function shouldTeleport()
    if game.PlaceId ~= VALID_PLACE_ID then return true end
    if game.PrivateServerId ~= "" and game.PrivateServerOwnerId ~= 0 then return true end
    if #Players:GetPlayers() > 5 then return true end
    return false
end

-- ‚úÖ N·∫øu server sai ‚Üí teleport sang server ph√π h·ª£p
if shouldTeleport() then
    warn("‚ùå Invalid server - teleporting to a valid one...")

    local newServer = findPublicServer()
    if newServer then
        _G.LastJobId = currentJobId -- Ghi l·∫°i JobId c≈©
        TeleportService:TeleportToPlaceInstance(VALID_PLACE_ID, newServer, LocalPlayer)
    else
        LocalPlayer:Kick("‚ùå No valid public server found.")
    end
    return -- ‚ùå Kh√¥ng ch·∫°y g√¨ ti·∫øp
end

-- ‚úÖ N·∫øu v·ª´a rejoin sau teleport ‚Üí ch·∫°y script ph·ª•
if _G.LastJobId and _G.LastJobId ~= currentJobId then
    print("üîÅ Rejoined server after teleport - running rejoin script")
    _G.LastJobId = currentJobId

    pcall(function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/NoLag-id/No-Lag-HUB/refs/heads/main/Loader/LoaderV1.lua"))()
    end)
else
    print("‚úÖ Joined a valid server from the start - skipping rejoin script")
end

-- ‚úÖ Cu·ªëi c√πng, lu√¥n ch·∫°y script ch√≠nh
print("‚úÖ Running main script...")
pcall(function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/namnnni2/GrowaGarden/refs/heads/main/NoLagHub"))()
end)
